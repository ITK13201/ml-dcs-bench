name: Release

on:
  push:
    tags:
      - "v*"

env:
  project_name: ml-dcs-bench

jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: "x64"
      - name: Install Python dependencies
        working-directory: ./ml-dcs-bench
        run: |
          pip install -U pip
          pip install pipenv
          pipenv install --system --deploy --ignore-pipfile
      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
         nuitka-version: main
         script-name: ./ml-dcs-bench/main.py
         onefile: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: Windows Build
          path: ./windows
      - name: Download MacOS Build
        uses: actions/download-artifact@v4
        with:
          name: macOS Build
          path: ./macos
      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: Linux Build
          path: ./linux
      - name: Display structure of downloaded files
        run: ls -R
      - name: Rename & Compress
        run: |
          mv ./windows/main.exe ./windows/${{ env.project_name }}.exe
          mv ./macos/main.bin ./macos/${{ env.project_name }}
          mv ./linux/main.bin ./linux/${{ env.project_name }}
          tar -C ./windows -pczvf ${{ env.project_name }}_${{ github.ref_name }}_windows_amd64.tar.gz ${{ env.project_name }}.exe
          tar -C ./macos -pczvf ${{ env.project_name }}_${{ github.ref_name }}_macos_amd64.tar.gz ${{ env.project_name }}
          tar -C ./linux -pczvf ${{ env.project_name }}_${{ github.ref_name }}_linux_amd64.tar.gz ${{ env.project_name }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.project_name }}_${{ github.ref_name }}_windows_amd64.tar.gz
            ${{ env.project_name }}_${{ github.ref_name }}_macos_amd64.tar.gz
            ${{ env.project_name }}_${{ github.ref_name }}_linux_amd64.tar.gz
          generate_release_notes: true
          make_latest: true
          token: ${{ secrets.PAT }}
